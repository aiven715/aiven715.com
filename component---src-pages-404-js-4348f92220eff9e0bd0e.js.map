{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","location","data","a","createElement","title","site","siteMetadata","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","header","react_default","gatsby_browser_entry","dataQuery","_data$site$siteMetada","social","className","to","href","mail","src","withPrefix","github","twitter","stackoverflow","linkedin","facebook","alt","_2351195078","Fragment","Helmet_default","rel"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAMeE,EAAA,iBAAAQ,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,KAAb,OACbN,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAQG,SAAUA,EAAUI,MAAOH,EAAKI,KAAKC,aAAaF,OACxDT,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAKM,MAAM,mBACXT,EAAAO,EAAAC,cAAA,uBACAR,EAAAO,EAAAC,cAAA,wEAIG,IAAMV,EAAS,+CCdtBJ,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAgB,IAAAlB,EAAAG,EAAAD,EAAA,uCAAAiB,IAAAnB,EAAAG,EAAAD,EAAA,gCAAAkB,IAAA,IAAAf,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAgB,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAO,EAAAc,GAAAE,EAAAvB,EAAA,KAAAwB,EAAAxB,EAAAO,EAAAgB,GAAAvB,EAAAG,EAAAD,EAAA,yBAAAsB,EAAAX,IAAAb,EAAAG,EAAAD,EAAA,+BAAAqB,EAAA,aAAAvB,EAAAG,EAAAD,EAAA,6BAAAqB,EAAA,WAAAvB,EAAAG,EAAAD,EAAA,yBAAAqB,EAAA,OAAAvB,EAAAG,EAAAD,EAAA,4BAAAqB,EAAA,UAAAvB,EAAAG,EAAAD,EAAA,+BAAAqB,EAAA,iBAAAE,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAAO,EAAAkB,GAAAzB,EAAAG,EAAAD,EAAA,iCAAAwB,EAAAb,IAAA,IAAAc,EAAA3B,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAyB,EAAA,IAYA,IAAMR,EAAqBS,IAAMC,cAAc,IAEzCT,EAAc,SAAAU,GAAK,OACvBxB,EAAAO,EAAAC,cAACK,EAAmBY,SAApB,KACG,SAAAC,GACC,OACEF,EAAMlB,MACLoB,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOrB,MAEtDkB,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMlB,KAAOkB,EAAMlB,KAAKA,KAAOoB,EAAgBF,EAAMG,OAAOrB,MAGvDN,EAAAO,EAAAC,cAAA,uCAaf,SAASI,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtBzB,KAAM0B,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAtC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBsC,EAAgBC,UAAOC,4BAA4BxC,EAASyC,UAClE,OAAOxB,IAAMd,cAAcuC,IAApBC,OAAAC,OAAA,CACL5C,WACAsC,iBACGA,EAAcO,QAIrBR,EAAiBX,UAAY,CAC3B1B,SAAU2B,IAAUmB,MAAM,CACxBL,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUO,8aChBA9C,EAAA,WAAAQ,GAAA,IACbK,EADaL,EACbK,MACA2C,EAFahD,EAEbgD,YAFaC,EAAAjD,EAGbkD,YAHa,IAAAD,EAGN,KAHMA,EAAAE,EAAAnD,EAIboD,YAJa,IAAAD,EAIN,GAJMA,EAAAE,EAAArD,EAKbsD,gBALa,IAAAD,EAKF,GALEA,EAAA,OAObE,EAAApD,EAAAC,cAACoD,EAAA,YAAD,CACEjC,MAAOkC,EACPjC,OAAQ,SAAAtB,GACN,IAAMwD,EAAkBV,GAAe9C,EAAKI,KAAKC,aAAayC,YAC9D,OACEO,EAAApD,EAAAC,cAACuD,EAAAxD,EAAD,CACEyD,eAAgB,CACdV,QAEF7C,MAAOA,EACPwD,cAAa,QAAU3D,EAAKI,KAAKC,aAAaF,MAC9C+C,KAAM,CACJ,CACEU,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAAS1D,GAEX,CACE2D,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAS7D,EAAKI,KAAKC,aAAa0D,QAElC,CACEH,KAAM,gBACNC,QAAS1D,GAEX,CACEyD,KAAM,sBACNC,QAASL,IAGVQ,OACCZ,EAASa,OAAS,EACd,CACEL,KAAM,WACNC,QAAST,EAASc,KAAK,OAEzB,IAELF,OAAOd,MArDlBlD,KAAAmE,KA4DF,IAAMZ,EAAY,0QCpEHa,EAAA,SAAAtE,GAAA,IAAGK,EAAHL,EAAGK,MAAH,OACbkE,EAAApE,EAAAC,cAACoE,EAAA,YAAD,CACEjD,MAAOkD,EACPjD,OAAQ,SAAAtB,GAAQ,IAAAwE,EACaxE,EAAKI,KAAKC,aAA7B0D,EADMS,EACNT,OAAQU,EADFD,EACEC,OAEhB,OACEJ,EAAApE,EAAAC,cAAA,UAAQwE,UAAU,eAChBL,EAAApE,EAAAC,cAAA,OAAKwE,UAAU,cACbL,EAAApE,EAAAC,cAAA,UACEmE,EAAApE,EAAAC,cAACoE,EAAA,KAAD,CAAMK,GAAG,KAAKxE,IAEhBkE,EAAApE,EAAAC,cAAA,OAAKwE,UAAU,UACbL,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOI,MACdR,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,sBAEvBV,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOO,QACdX,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,wBAEvBV,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOQ,SACdZ,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,yBAEvBV,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOS,eACdb,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,gCAEvBV,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOU,UACdd,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,0BAEvBV,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOW,UACdf,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,4BAI3BV,EAAApE,EAAAC,cAAA,OAAKwE,UAAU,OACbL,EAAApE,EAAAC,cAAA,OAAK4E,IAAKC,qBAAW,sBAAuBM,IAAKtB,IACjDM,EAAApE,EAAAC,cAAA,uBACamE,EAAApE,EAAAC,cAAA,cAAS6D,GADtB,sFAKFM,EAAApE,EAAAC,cAAA,OAAKwE,UAAU,QACbL,EAAApE,EAAAC,cAAA,WACEmE,EAAApE,EAAAC,cAACoE,EAAA,KAAD,CAAMK,GAAG,gBAAT,gBAEFN,EAAApE,EAAAC,cAAA,OAAKwE,UAAU,cACbL,EAAApE,EAAAC,cAAA,KAAG0E,KAAMH,EAAOI,MAAhB,eA5CZ7E,KAAAsF,KAqDIf,EAAS,aCrDAjF,EAAA,WAAAQ,GAAA,IAAGK,EAAHL,EAAGK,MAAOoB,EAAVzB,EAAUyB,SAAV,OACb8C,EAAApE,EAAAC,cAAAmE,EAAApE,EAAAsF,SAAA,KACElB,EAAApE,EAAAC,cAACsF,EAAAvF,EAAD,KACEoE,EAAApE,EAAAC,cAAA,QACE0E,KAAK,wFACLa,IAAI,gBAGRpB,EAAApE,EAAAC,cAAA,OAAKwE,UAAU,aACbL,EAAApE,EAAAC,cAACkE,EAAD,CAAQjE,MAAOA,IACdoB","file":"component---src-pages-404-js-4348f92220eff9e0bd0e.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nexport default ({ location, data }) => (\n  <Layout location={location} title={data.site.siteMetadata.title}>\n    <SEO title=\"404: Not Found\" />\n    <h1>Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.ðŸ˜©</p>\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport default ({\n  title,\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n}) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:title',\n              content: title,\n            },\n            {\n              property: 'og:description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:type',\n              content: 'website',\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: 'twitter:title',\n              content: title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Image from 'gatsby-image'\nimport { StaticQuery, Link, graphql, withPrefix } from 'gatsby'\n\nexport default ({ title }) => (\n  <StaticQuery\n    query={dataQuery}\n    render={data => {\n      const { author, social } = data.site.siteMetadata\n\n      return (\n        <header className=\"page-header\">\n          <div className=\"page-title\">\n            <h3>\n              <Link to=\"/\">{title}</Link>\n            </h3>\n            <div className=\"social\">\n              <a href={social.mail}>\n                <img src={withPrefix('/icons/mail.svg')} />\n              </a>\n              <a href={social.github}>\n                <img src={withPrefix('/icons/github.svg')} />\n              </a>\n              <a href={social.twitter}>\n                <img src={withPrefix('/icons/twitter.svg')} />\n              </a>\n              <a href={social.stackoverflow}>\n                <img src={withPrefix('/icons/stack-overflow.svg')} />\n              </a>\n              <a href={social.linkedin}>\n                <img src={withPrefix('/icons/linkedin.svg')} />\n              </a>\n              <a href={social.facebook}>\n                <img src={withPrefix('/icons/facebook.svg')} />\n              </a>\n            </div>\n          </div>\n          <div className=\"bio\">\n            <img src={withPrefix('/images/avatar.jpg')} alt={author} />\n            <p>\n              Written by <strong>{author}</strong> independent software\n              consultant, specifying on building complex web applications\n            </p>\n          </div>\n          <div className=\"menu\">\n            <div>\n              <Link to=\"/open-source\">Open source</Link>\n            </div>\n            <div className=\"menu-right\">\n              <a href={social.mail}>Hire me</a>\n            </div>\n          </div>\n        </header>\n      )\n    }}\n  />\n)\n\nconst dataQuery = graphql`\n  query DataQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          mail\n          github\n          twitter\n          stackoverflow\n          linkedin\n          facebook\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\n\nexport default ({ title, children }) => (\n  <>\n    <Helmet>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700,700i|Montserrat:900\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <div className=\"container\">\n      <Header title={title} />\n      {children}\n    </div>\n  </>\n)\n"],"sourceRoot":""}