{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/utils.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_ref","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","a","createElement","keywords","className","map","_ref2","node","frontmatter","fields","slug","key","to","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","header","react_default","gatsby_browser_entry","dataQuery","_data$site$siteMetada","social","href","mail","src","withPrefix","github","twitter","stackoverflow","linkedin","facebook","alt","_2351195078","Fragment","Helmet_default","rel","minutes","cups","Math","round","Array","fill","$export","P","toObject","toAbsoluteIndex","toLength","value","O","this","aLen","arguments","index","undefined","end","endPos"],"mappings":"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","file":"component---src-pages-index-js-25dfb94ea069ec8af8f1.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { formatReadingTime } from '../utils'\n\nexport default ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" keywords={data.site.siteMetadata.keywords} />\n      <div className=\"posts\">\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <section key={node.fields.slug}>\n              <header>\n                <h3 className=\"posts-title\">\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h3>\n                <small>\n                  {node.frontmatter.date} • {formatReadingTime(node.timeToRead)}\n                </small>\n              </header>\n              <p\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </section>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        keywords\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport default ({\n  title,\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n}) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:title',\n              content: title,\n            },\n            {\n              property: 'og:description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:type',\n              content: 'website',\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: 'twitter:title',\n              content: title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Image from 'gatsby-image'\nimport { StaticQuery, Link, graphql, withPrefix } from 'gatsby'\n\nexport default ({ title }) => (\n  <StaticQuery\n    query={dataQuery}\n    render={data => {\n      const { author, social } = data.site.siteMetadata\n\n      return (\n        <header className=\"page-header\">\n          <div className=\"page-title\">\n            <h3>\n              <Link to=\"/\">{title}</Link>\n            </h3>\n            <div className=\"social\">\n              <a href={social.mail}>\n                <img src={withPrefix('/icons/mail.svg')} />\n              </a>\n              <a href={social.github}>\n                <img src={withPrefix('/icons/github.svg')} />\n              </a>\n              <a href={social.twitter}>\n                <img src={withPrefix('/icons/twitter.svg')} />\n              </a>\n              <a href={social.stackoverflow}>\n                <img src={withPrefix('/icons/stack-overflow.svg')} />\n              </a>\n              <a href={social.linkedin}>\n                <img src={withPrefix('/icons/linkedin.svg')} />\n              </a>\n              <a href={social.facebook}>\n                <img src={withPrefix('/icons/facebook.svg')} />\n              </a>\n            </div>\n          </div>\n          <div className=\"bio\">\n            <img src={withPrefix('/images/avatar.jpg')} alt={author} />\n            <p>\n              Written by <strong>{author}</strong> independent software\n              consultant, specifying on building complex web applications\n            </p>\n          </div>\n          <div className=\"menu\">\n            <div>\n              <Link to=\"/open-source\">Open source</Link>\n            </div>\n            <div className=\"menu-right\">\n              <a href={social.mail}>Hire me</a>\n            </div>\n          </div>\n        </header>\n      )\n    }}\n  />\n)\n\nconst dataQuery = graphql`\n  query DataQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          mail\n          github\n          twitter\n          stackoverflow\n          linkedin\n          facebook\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\n\nexport default ({ title, children }) => (\n  <>\n    <Helmet>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700,700i|Montserrat:900\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <div className=\"container\">\n      <Header title={title} />\n      {children}\n    </div>\n  </>\n)\n","export const formatReadingTime = minutes => {\n  const cups = Math.round(minutes / 5)\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}