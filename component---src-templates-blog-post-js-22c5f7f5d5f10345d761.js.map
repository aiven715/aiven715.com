{"version":3,"sources":["webpack:///./src/components/disqus.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/utils.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["disqus","react_default","a","createElement","Fragment","Helmet_default","id","__webpack_exports__","_ref","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","keywords","frontmatter","split","previous","next","layout","seo","description","spoiler","className","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","gatsby_browser_entry","to","fields","slug","rel","pageQuery","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","_ref$lang","lang","_ref$meta","meta","_ref$keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","header","dataQuery","_data$site$siteMetada","social","href","mail","src","withPrefix","github","twitter","stackoverflow","linkedin","facebook","alt","_2351195078","minutes","cups","Math","round","Array","fill","$export","P","toObject","toAbsoluteIndex","toLength","value","O","this","aLen","arguments","index","undefined","end","endPos"],"mappings":"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","file":"component---src-templates-blog-post-js-22c5f7f5d5f10345d761.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default () => (\n  <>\n    <Helmet>\n      <script>\n        {`\n          var disqus_config = function () {\n            this.page.url = document.location.href.split('?')[0].split('#');\n            this.page.identifier = this.page.url;\n          };\n          (function() {\n          var d = document, s = d.createElement('script');\n          s.src = 'https://aiven715.disqus.com/embed.js';\n          s.setAttribute('data-timestamp', +new Date());\n          (d.head || d.body).appendChild(s);\n          })();\n        `}\n      </script>\n    </Helmet>\n    <div id=\"disqus_thread\" />\n    <noscript>Please enable JavaScript to view the comments</noscript>\n  </>\n)\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Disqus from '../components/disqus'\nimport { formatReadingTime } from '../utils'\n\nexport default ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const keywords = post.frontmatter.keywords.split(', ')\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.spoiler}\n        keywords={keywords}\n      />\n      <div className=\"post\">\n        <header>\n          <h1>{post.frontmatter.title}</h1>\n          <p className=\"post-info\">\n            {post.frontmatter.date} • {formatReadingTime(post.timeToRead)}\n          </p>\n        </header>\n        <article dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n        <Disqus />\n        {(next || previous) && (\n          <ul className=\"post-pagination\">\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n        keywords\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport default ({\n  title,\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n}) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:title',\n              content: title,\n            },\n            {\n              property: 'og:description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:type',\n              content: 'website',\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: 'twitter:title',\n              content: title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Image from 'gatsby-image'\nimport { StaticQuery, Link, graphql, withPrefix } from 'gatsby'\n\nexport default ({ title }) => (\n  <StaticQuery\n    query={dataQuery}\n    render={data => {\n      const { author, social } = data.site.siteMetadata\n\n      return (\n        <header className=\"page-header\">\n          <div className=\"page-title\">\n            <h3>\n              <Link to=\"/\">{title}</Link>\n            </h3>\n            <div className=\"social\">\n              <a href={social.mail}>\n                <img src={withPrefix('/icons/mail.svg')} />\n              </a>\n              <a href={social.github}>\n                <img src={withPrefix('/icons/github.svg')} />\n              </a>\n              <a href={social.twitter}>\n                <img src={withPrefix('/icons/twitter.svg')} />\n              </a>\n              <a href={social.stackoverflow}>\n                <img src={withPrefix('/icons/stack-overflow.svg')} />\n              </a>\n              <a href={social.linkedin}>\n                <img src={withPrefix('/icons/linkedin.svg')} />\n              </a>\n              <a href={social.facebook}>\n                <img src={withPrefix('/icons/facebook.svg')} />\n              </a>\n            </div>\n          </div>\n          <div className=\"bio\">\n            <img src={withPrefix('/images/avatar.jpg')} alt={author} />\n            <p>\n              Written by <strong>{author}</strong> independent software\n              consultant, specifying on building complex web applications\n            </p>\n          </div>\n          <div className=\"menu\">\n            <div>\n              <Link to=\"/open-source\">Open source</Link>\n            </div>\n            <div className=\"menu-right\">\n              <a href={social.mail}>Hire me</a>\n            </div>\n          </div>\n        </header>\n      )\n    }}\n  />\n)\n\nconst dataQuery = graphql`\n  query DataQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          mail\n          github\n          twitter\n          stackoverflow\n          linkedin\n          facebook\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\n\nexport default ({ title, children }) => (\n  <>\n    <Helmet>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700,700i|Montserrat:900\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <div className=\"container\">\n      <Header title={title} />\n      {children}\n    </div>\n  </>\n)\n","export const formatReadingTime = minutes => {\n  const cups = Math.round(minutes / 5)\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}